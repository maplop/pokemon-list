---
interface Props {
  type: string;
}

const { type } = Astro.props;

const typeInfo: Record<string, { color: string; icon: string }> = {
  normal: { color: "bg-gray-300 text-black", icon: "👾" },
  fire: { color: "bg-orange-600 text-white", icon: "🔥" },
  water: { color: "bg-sky-600 text-black", icon: "💧" },
  grass: { color: "bg-emerald-400 text-black", icon: "🌿" },
  electric: { color: "bg-yellow-200 text-black", icon: "⚡" },
  ice: { color: "bg-cyan-300 text-black", icon: "❄️" },
  fighting: { color: "bg-red-500 text-white", icon: "🥊" },
  poison: { color: "bg-fuchsia-500 text-white", icon: "☠️" },
  ground: { color: "bg-yellow-600 text-white", icon: "🌍" },
  flying: { color: "bg-indigo-600 text-white", icon: "🕊️" },
  psychic: { color: "bg-pink-400 text-black", icon: "🔮" },
  bug: { color: "bg-lime-400 text-black", icon: "🐛" },
  rock: { color: "bg-amber-500 text-black", icon: "🧱" },
  ghost: { color: "bg-purple-700 text-white", icon: "👻" },
  dragon: { color: "bg-indigo-500 text-white", icon: "🐉" },
  dark: { color: "bg-neutral-600 text-white", icon: "🌑" },
  steel: { color: "bg-gray-400 text-black", icon: "⚙️" },
  fairy: { color: "bg-pink-300 text-black", icon: "🧚" },
};

const { color, icon } = typeInfo[type.toLowerCase()] ?? {
  color: "bg-gray-400",
  icon: "❓",
};
---

<div class={`flex items-center gap-1 px-2 py-1 rounded-xl ${color}`}>
  <span class="text-[12px] leading-none">{icon}</span>
  <span class="text-[14px] leading-none font-medium">{type}</span>
</div>
